// components/MenuProvider.jsx
import React, { createContext, useContext, useState, useEffect } from "react";
import pb from "../pocketbase";

// üîß –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –º–µ–Ω—é (–º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ)
export async function fetchMenu() {
  return await pb.collection("menu").getFullList({
    sort: "group,name"
  });
}

// –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–∫—Å—Ç
const MenuContext = createContext();

export function useMenu() {
  return useContext(MenuContext);
}

export function MenuProvider({ children }) {
  const [menu, setMenu] = useState([]);
  const [loading, setLoading] = useState(true);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –º–µ–Ω—é –∏–∑ PocketBase –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ
  useEffect(() => {
    loadMenu();
  }, []);

  async function loadMenu() {
    try {
      const records = await fetchMenu();
      setMenu(records);
    } catch (error) {
      console.error("üß® –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –º–µ–Ω—é:", error);
    } finally {
      setLoading(false);
    }
  }

  // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π –ø–æ–∑–∏—Ü–∏–∏
  async function addDish(data) {
    try {
      const newDish = await pb.collection("menu").create(data);
      setMenu(prev => [...prev, newDish]);
      return newDish;
    } catch (error) {
      console.error("üß® –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏:", error);
      throw error;
    }
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏
  async function deleteDish(id) {
    try {
      await pb.collection("menu").delete(id);
      setMenu(prev => prev.filter(item => item.id !== id));
    } catch (error) {
      console.error("üß® –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:", error);
      throw error;
    }
  }

  const value = {
    menu,
    loading,
    addDish,
    deleteDish,
    reloadMenu: loadMenu,
  };

  return <MenuContext.Provider value={value}>{children}</MenuContext.Provider>;
}
